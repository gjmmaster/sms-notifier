# .github/workflows/keep-alive.yml
# Vers√£o final combinando a chamada para ambos os servi√ßos com a l√≥gica robusta de retentativas.

name: Keep Services Awake

on:
  schedule:
    # Executa a cada 10 minutos, das 11h √†s 22h UTC (8h √†s 19h BRT), de segunda a sexta.
    - cron: '*/10 11-22 * * 1-5'

  workflow_dispatch: # Permite execu√ß√£o manual

jobs:
  ping-services:
    runs-on: ubuntu-latest
    steps:
      - name: Ping sms-notifier with retries
        run: |
          echo "üèì Pinging sms-notifier to ensure it's awake..."
          for i in {1..3}; do
            echo "Attempt $i of 3 for sms-notifier..."
            response=$(curl -s -w "%{http_code}" -m 30 "${{ secrets.SMS_NOTIFIER_URL }}" || echo "000")
            http_code=${response: -3}
            
            if [ "$http_code" -ge 200 ] && [ "$http_code" -lt 400 ]; then
              echo "‚úÖ sms-notifier is awake and responding with status: $http_code"
              break # Sai do loop se for bem-sucedido
            fi
            
            if [ $i -lt 3 ]; then
                echo "Service not ready (status: $http_code), waiting 15 seconds before retry..."
                sleep 15
            fi
          done
          
          if ! ([ "$http_code" -ge 200 ] && [ "$http_code" -lt 400 ]); then
            echo "‚ùå sms-notifier did not respond successfully after 3 attempts. Status: $http_code"
            # Removido o 'exit 1' para permitir que o pr√≥ximo passo (watcher) execute
          fi

      - name: Ping notification-watcher with retries
        run: |
          echo "üèì Pinging notification-watcher to ensure it's awake..."
          for i in {1..3}; do
            echo "Attempt $i of 3 for notification-watcher..."
            response=$(curl -s -w "%{http_code}" -m 30 "${{ secrets.NOTIFICATION_WATCHER_URL }}" || echo "000")
            http_code=${response: -3}
            
            if [ "$http_code" -ge 200 ] && [ "$http_code" -lt 400 ]; then
              echo "‚úÖ notification-watcher is awake and responding with status: $http_code"
              exit 0 # Se este for bem-sucedido, o job termina com sucesso
            fi

            if [ $i -lt 3 ]; then
                echo "Service not ready (status: $http_code), waiting 15 seconds before retry..."
                sleep 15
            fi
          done
          
          echo "‚ùå notification-watcher did not respond successfully after 3 attempts. Status: $http_code"
          exit 1 # Se este falhar, o job inteiro falha
